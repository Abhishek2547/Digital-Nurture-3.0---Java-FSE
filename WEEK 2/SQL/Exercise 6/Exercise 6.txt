Scenario 1: Generate Monthly Statements for All Customers

DECLARE
    CURSOR cur_transactions IS
        SELECT c.CustomerID, c.Name, t.TransactionID, t.TransactionDate, t.Amount, t.TransactionType
        FROM Customers c
        JOIN Accounts a ON c.CustomerID = a.CustomerID
        JOIN Transactions t ON a.AccountID = t.AccountID
        WHERE EXTRACT(MONTH FROM t.TransactionDate) = EXTRACT(MONTH FROM SYSDATE)
          AND EXTRACT(YEAR FROM t.TransactionDate) = EXTRACT(YEAR FROM SYSDATE)
        ORDER BY c.CustomerID, t.TransactionDate;

    v_customer_id Customers.CustomerID%TYPE;
    v_name Customers.Name%TYPE;
    v_transaction_id Transactions.TransactionID%TYPE;
    v_transaction_date Transactions.TransactionDate%TYPE;
    v_amount Transactions.Amount%TYPE;
    v_transaction_type Transactions.TransactionType%TYPE;
BEGIN
    OPEN cur_transactions;

    LOOP
        FETCH cur_transactions INTO v_customer_id, v_name, v_transaction_id, v_transaction_date, v_amount, v_transaction_type;
        EXIT WHEN cur_transactions%NOTFOUND;

        DBMS_OUTPUT.PUT_LINE('Customer ID: ' || v_customer_id || ' - ' || v_name);
        DBMS_OUTPUT.PUT_LINE('Transaction ID: ' || v_transaction_id);
        DBMS_OUTPUT.PUT_LINE('Date: ' || v_transaction_date || ' Amount: ' || v_amount || ' Type: ' || v_transaction_type);
        DBMS_OUTPUT.PUT_LINE('---------------------------------------------');
    END LOOP;

    CLOSE cur_transactions;
END;


Scenario 2: Apply Annual Fee to All Accounts

DECLARE
    CURSOR cur_accounts IS
        SELECT AccountID, Balance
        FROM Accounts;

    v_account_id Accounts.AccountID%TYPE;
    v_balance Accounts.Balance%TYPE;
    v_annual_fee CONSTANT NUMBER := 50; -- Define the annual fee amount
BEGIN
    OPEN cur_accounts;

    LOOP
        FETCH cur_accounts INTO v_account_id, v_balance;
        EXIT WHEN cur_accounts%NOTFOUND;

        -- Deduct the annual fee
        UPDATE Accounts
        SET Balance = Balance - v_annual_fee
        WHERE AccountID = v_account_id;

        DBMS_OUTPUT.PUT_LINE('Annual fee applied to Account ID: ' || v_account_id);
    END LOOP;

    CLOSE cur_accounts;
    COMMIT;
END;

Scenario 3: Update the Interest Rate for All Loans

DECLARE
    CURSOR cur_loans IS
        SELECT LoanID, InterestRate
        FROM Loans;

    v_loan_id Loans.LoanID%TYPE;
    v_interest_rate Loans.InterestRate%TYPE;
    v_new_interest_rate NUMBER;
BEGIN
    OPEN cur_loans;

    LOOP
        FETCH cur_loans INTO v_loan_id, v_interest_rate;
        EXIT WHEN cur_loans%NOTFOUND;

        -- Apply new policy (e.g., increase by 0.5% for demonstration)
        v_new_interest_rate := v_interest_rate + 0.5;

        -- Update the interest rate
        UPDATE Loans
        SET InterestRate = v_new_interest_rate
        WHERE LoanID = v_loan_id;

        DBMS_OUTPUT.PUT_LINE('Updated Interest Rate for Loan ID: ' || v_loan_id || ' to ' || v_new_interest_rate || '%');
    END LOOP;

    CLOSE cur_loans;
    COMMIT;
END;

